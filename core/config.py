# config.py

import os        # Usado para acessar vari√°veis de ambiente do sistema
import time      # (N√£o est√° sendo usado diretamente neste trecho, mas pode ser usado por outros m√≥dulos que importam este config)

# ============================
# üîå CONFIGURA√á√ÉO DO MQTT
# ============================

# Endere√ßo IP do broker MQTT que ser√° utilizado para envio e recebimento de mensagens
MQTT_BROKER_IP = "192.168.3.127"

# Porta padr√£o do MQTT
MQTT_PORT = 1883

# Credenciais para autentica√ß√£o no broker MQTT
MQTT_USER = "usermqtt"
MQTT_PASS = "passmqtt"

# T√≥pico onde o estado da aplica√ß√£o ser√° publicado (ex: "porta aberta", "rosto reconhecido", etc.)
MQTT_TOPIC_STATE = "face_recognition/status"

# T√≥pico para o discovery do estado no Home Assistant (integra√ß√£o autom√°tica)
MQTT_TOPIC_DISCOVERY = "homeassistant/sensor/facial_recognition_cam/status/config"

# T√≥pico que escuta comandos de controle da porta (ex: abrir ou fechar a porta)
MQTT_TOPIC_DOOR_CONTROL = "face_recognition/door_control"

# T√≥pico para o discovery do comando de porta no Home Assistant
MQTT_TOPIC_DOOR_DISCOVERY = "homeassistant/sensor/facial_recognition_cam/door_command/config"

# T√≥pico usado para enviar alertas quando um rosto desconhecido for detectado
MQTT_TOPIC_ALERT = "face_recognition/alert"

# T√≥pico de discovery para esses alertas no Home Assistant
MQTT_TOPIC_ALERT_DISCOVERY = "homeassistant/sensor/facial_recognition_cam/unknown_alert/config"

# ============================
# üòé CONFIGURA√á√ÉO DO RECONHECIMENTO FACIAL
# ============================

# Diret√≥rio onde ficam armazenadas as imagens dos rostos conhecidos
KNOWN_FACES_DIR = "known_faces"

# Diret√≥rio onde ser√£o salvas imagens de rostos desconhecidos capturados
UNKNOWN_FACES_DIR = "unknown_faces"

# Toler√¢ncia de reconhecimento facial: quanto menor, mais rigorosa a verifica√ß√£o (0.6 √© um valor comum)
FACE_TOLERANCE = 0.6

# Fator de escala para reduzir o tamanho do frame (acelera o processamento, pois a imagem √© menor)
SCALE_FACTOR = 0.25

# ============================
# ‚è±Ô∏è CONTROLE DE TEMPO E INATIVIDADE
# ============================

# Quantidade de frames consecutivos que precisam reconhecer um rosto para confirmar a identidade
CONFIRMATION_THRESHOLD = 5

# Tempo de inatividade (em segundos) antes de considerar que a c√¢mera n√£o est√° mais detectando ningu√©m
INACTIVITY_TIMEOUT_SECONDS = 30

# ============================
# üìù LOGS
# ============================

# Nome do arquivo CSV onde ser√° registrado o hist√≥rico de reconhecimentos
LOG_FILE = "recognition_history.csv"

# ============================
# üóÉÔ∏è BANCO DE DADOS
# ============================

# URL de conex√£o com o banco de dados. Tenta obter da vari√°vel de ambiente DATABASE_URL, caso contr√°rio usa SQLite local.
DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///recognition.db")

# ============================
# üé• C√ÇMERA
# ============================

# √çndice da c√¢mera a ser usada: 0 geralmente √© a webcam padr√£o. 
# Tamb√©m pode ser uma URL de stream de v√≠deo (ex: IP Webcam do celular).
CAMERA_INDEX = 1


# ============================
# üö® SEGURAN√áA
# ============================

# Tempo m√≠nimo (em segundos) entre dois alertas consecutivos de rosto desconhecido
ALERT_INTERVAL_SECONDS = 10
